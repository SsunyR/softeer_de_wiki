services:
  namenode:
    image: apache/hadoop:3.4.1
    platform: linux/amd64
    hostname: namenode
    container_name: namenode
    privileged: true
    command: >
      bash -c "
        if [ ! -d /hadoop/dfs/name/current ]; then
          echo 'Formatting NameNode...';
          hdfs namenode -format -force -nonInteractive;
        fi;
        hdfs namenode
      "
    environment:
      - HDFS_NAMENODE_USER=root
    volumes:
      - ./config:/opt/hadoop/etc/hadoop
      - namenode_data:/hadoop/dfs/name
    user: root
    ports:
      - "9870:9870"
      - "9820:9820"
  
  datanode1:
    image: apache/hadoop:3.4.1
    platform: linux/amd64
    hostname: datanode1
    container_name: datanode1
    user: root
    command: [ "hdfs", "datanode" ]
    volumes:
      - ./config:/opt/hadoop/etc/hadoop
      - datanode1_data:/hadoop/dfs/data
    ports:
      - "9864:9864"
    depends_on:
      - namenode
    
  datanode2:
    image: apache/hadoop:3.4.1
    platform: linux/amd64
    hostname: datanode2
    container_name: datanode2
    user: root
    command: [ "hdfs", "datanode" ]
    volumes:
      - ./config:/opt/hadoop/etc/hadoop
      - datanode2_data:/hadoop/dfs/data
    ports:
      - "9865:9864"
    depends_on:
      - namenode

  resourcemanager:
    image: apache/hadoop:3.4.1
    platform: linux/amd64
    hostname: resourcemanager
    container_name: resourcemanager
    user: root
    command: [ "yarn", "resourcemanager"]
    volumes:
      - ./config:/opt/hadoop/etc/hadoop
    ports:
      - "8088:8088"
      - "8030:8030"
      - "8031:8031"
      - "8032:8032"
      - "8033:8033"
    depends_on:
      - namenode
      - datanode1
      - datanode2
    
  nodemanager1:
    image: apache/hadoop:3.4.1
    platform: linux/amd64
    hostname: nodemanager1
    container_name: nodemanager1
    user: root
    command: [ "yarn", "nodemanager"]
    volumes:
      - ./config:/opt/hadoop/etc/hadoop
    ports:
      - "8042:8042"
    depends_on:
      - resourcemanager
  
  nodemanager2:
    image: apache/hadoop:3.4.1
    platform: linux/amd64
    hostname: nodemanager2
    container_name: nodemanager2
    user: root
    command: [ "yarn", "nodemanager"]
    volumes:
      - ./config:/opt/hadoop/etc/hadoop
    ports:
      - "8043:8042"
    depends_on:
      - resourcemanager
  
  historyserver:
    image: apache/hadoop:3.4.1
    platform: linux/amd64
    hostname: historyserver
    container_name: historyserver
    user: root
    command: [ "mapred", "historyserver"]
    volumes:
      - ./config:/opt/hadoop/etc/hadoop
    ports:
      - "8188:8188"
      - "19888:19888"
      - "10020:10020"
    depends_on:
      - namenode
      - datanode1
      - datanode2
      - resourcemanager

volumes:
  namenode_data:
  datanode1_data:
  datanode2_data: